name: Unity WebGL CI/CD ðŸŽ®

on:
  push:
    branches: [ main ]  
  pull_request:

jobs:
  
  # expand-space:
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Free Disk Space (Ubuntu)
  #     uses: jlumbroso/free-disk-space@main
  #     with:
  #       tool-cache: false
  #       android: true
  #       dotnet: true
  #       haskell: true
  #       large-packages: true
  #       docker-images: true
  #       swap-storage: true
  #   - name: Expand Docker space dynamically
  #     shell: bash
  #     run: |
  #       echo "=== Detecting system memory ==="
  #       TOTAL_MEM_GB=$(free -g | awk '/^Mem:/{print $2}')
  #       echo "Detected ${TOTAL_MEM_GB} GB of RAM."
    
  #       if [ "$TOTAL_MEM_GB" -ge 14 ]; then
  #         TMPFS_SIZE="30G"
  #       elif [ "$TOTAL_MEM_GB" -ge 7 ]; then
  #         TMPFS_SIZE="25G"
  #       else
  #         TMPFS_SIZE="15G"
  #       fi
    
  #       echo "Using tmpfs size: $TMPFS_SIZE"
    
  #       echo "=== Expanding Docker space ==="
  #       sudo service docker stop
  #       sudo rm -rf /var/lib/docker
  #       sudo mkdir -p /mnt/docker
  #       sudo mount -t tmpfs -o size=$TMPFS_SIZE tmpfs /mnt/docker
  #       sudo ln -s /mnt/docker /var/lib/docker
  #       sudo service docker start
    
  #       echo "=== Checking space usage ==="
  #       df -h
  #       docker system df || true
  
  Run-Unity-Tests:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache Unity Library
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Run Unity tests
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build WebGL âœ¨
    runs-on: ubuntu-latest
    # needs: expand-space
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Expand Docker storage to /mnt/docker
        shell: bash
        run: |
          echo "=== Expanding Docker space using /mnt/docker ==="
          sudo systemctl stop docker.socket || true
          sudo systemctl stop docker || true
          sudo rm -rf /var/lib/docker
          sudo mkdir -p /mnt/docker
          echo '{"data-root": "/mnt/docker"}' | sudo tee /etc/docker/daemon.json
          sudo systemctl daemon-reload
          sudo systemctl start docker
          echo "Docker root dir:"
          docker info | grep "Docker Root Dir"
          echo "Current disk usage:"
          df -h
      # Cache Unity Library
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build WebGL
      - name: Build WebGL
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true
          customImage: unityci/editor:ubuntu-6000.2.2f1-webgl-3

      - name: Display Editor log if build failed
        if: failure()
        run: |
          echo "=== BUILD FAILED: Showing last 100 lines of Editor.log ==="
          tail -n 100 unity-editor.log || echo "No Editor log found"
  
      # Upload artifact (for verification or manual download)
      - name: Upload WebGL artifact
        uses: actions/upload-artifact@v4
        with:
          name: WebGL-Build
          path: build/WebGL

  deploy:
    name: Deploy to itch.io 
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'   
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download the build from previous job
      - name: Download WebGL build
        uses: actions/download-artifact@v4
        with:
          name: WebGL-Build
          path: build/WebGL

      # Install Butler (itch.io CLI)
      - name: Install Butler CLI
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip -d butler
          sudo mv butler/butler /usr/local/bin/butler
          butler -V

      # Deploy to itch.io
      - name: Upload to itch.io
        run: |
          butler push build/WebGL "${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME_NAME }}:webgl"
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
